.PHONY: build clean install doc toto distant chord

.DEFAULT: build

USE_OCAMLFIND = true

OCAMLPACKS[] =
	extlib
	cryptokit
	unix
	str

NATIVE_ENABLED = true
BYTE_ENABLED = false

#
# Various options
#
OCAMLFLAGS    += -g -warn-error A
# OCAMLCFLAGS   +=
# OCAMLOPTFLAGS +=
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

src[]=
	read
	datamodel
	helpers
	write_index
	write_song

prog = $(OCamlProgram song-to-html,$(src))

build : $(prefix)/bin/song-to-html

mkdir -p $(prefix)/bin

$(prefix)/bin/song-to-html : song-to-html
	cp $< $@


src_chord[]=
	make_chord_svg
	chord

make_chord = $(OCamlProgram make-chord,$(src_chord))

letters[]=
	C
	Csharp
	D
	Dsharp
	E
	F
	Fsharp
	G
	Gsharp
	A
	Asharp
	B

decoration[]=
	$(EMPTY)
	7
	m
	m7
	M

chords[]=
	$(addsuffix -e-form,$(letters)) 
	$(addsuffix 7-e-form,$(letters)) 
	$(addsuffix m-e-form,$(letters)) 
	$(addsuffix m7-e-form,$(letters)) 
	$(addsuffix 7M-e-form,$(letters)) 

	$(addsuffix -a-form,$(letters))
	$(addsuffix m-a-form,$(letters))
	$(addsuffix m7-a-form,$(letters))
	$(addsuffix 7M-a-form,$(letters))
	$(addsuffix 7-a-form,$(letters))

	$(addsuffix -c-form,$(letters))
	$(addsuffix m-c-form,$(letters))
	$(addsuffix m7-c-form,$(letters))
	$(addsuffix 7M-c-form,$(letters))
	$(addsuffix 7-c-form,$(letters))

	$(addsuffix -g-form,$(letters))
	$(addsuffix m-g-form,$(letters))
	$(addsuffix m7-g-form,$(letters))
	$(addsuffix 7M-g-form,$(letters))
	$(addsuffix 7-g-form,$(letters))


svg_chords=$(addprefix tmp/,$(addsuffix .svg,$(chords)))

$(svg_chords) : $(make_chord)
	./make-chord 

prefix=$(dir $(prefix))
mkdir -p $(prefix)/png
mkdir -p tmp

foreach(f,$(chords))
	$(prefix)/png/$f.png : tmp/$f.svg
		inkscape --export-png $@ --file $<
	export .RULE

chord : $(addprefix $(prefix)/png/,$(addsuffix .png,$(chords)))
