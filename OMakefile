.PHONY: build 

.DEFAULT: build



srcdir = $(absname $(dir $(CWD)))

if $(not $(defined prefix))
	prefix = $(srcdir)/install
	export

println($"prefix is : $(prefix)")

song_files=$(glob songs/*.song)
songs=$(song_files)
songs=$(removeprefix songs,$(songs))
songs=$(removesuffix .song,$(songs))
songs=$(basename $(songs))
println($"songs : $(songs)")

targets=$(songs)
targets=$(addprefix $(prefix)/,$(targets))
targets=$(addsuffix .html,$(targets))
println($"targets : $(targets)")

generator=$(prefix)/bin/song-to-html

$(targets) : $(generator) $(song_files)
	$(generator) $(srcdir)/songs $(prefix)

build : $(targets)


css[]=
	song.css
	song-print.css

foreach(f,$(css))
	build : $(prefix)/$f

	$(prefix)/$f : $(srcdir)/css/$f
		cp $< $@

	export .RULE



.SUBDIRS: src

clean :
	rm $(filter-proper-targets $(ls R, .))

distant : build
	auto-ftp --hostname $(host) --port $(port) --user laurent --script script.txt


$(prefix)/ftp-script.txt : $(song_files)
	echo "echo on" > $@	
	echo "mkdir partoches" >> $@
	echo "cd partoches" >> $@
	foreach(f,$(addsuffix .html,$(songs)) index.html song.css song-print.css)
		echo "put_no_sha1 $f" >> $@

build : $(prefix)/ftp-script.txt
